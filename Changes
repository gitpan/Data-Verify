Revision history for Perl extension Data::Verify.

0.01  Wed Jul  3 19:19:46 2002
	- original version; created by h2xs 1.21 with options
		-n Data::Verify -X

0.01_04 28.07.2002 23:55

	- Added Bouncer Classes.

	- added 'describe'

0.01_05 31.07.2002 00:21

	- Nearly a complete rewrite ! More clean oo-perl.

	- Removed Exporter-stuff. No more namespace pollution ;)

	- Tests now have there own packages and methods.

	- Now Types are stored in $Data::Verify::Type::registry HASH.

	- Added use of Exceptions (use Error) for reporting.

		use Error qw(:try);

		use Data::Verify;

		try
		{
			my $test = Data::Verify->new( %$href_args );

				# give info about this type and what it will do

			println $test->info;

				# returns an array of test-information

			println join "\n", $test->describe;

				# start our test-program and throw exception when there is trouble

			$test->verify;
		}
		catch Data::Verify::Exception with
		{
		    my $e = shift;

		    printfln "\n%s:", $e->text;

		    println "Error ==> Expected that ".$_->text foreach @{ $e->object->fails };
		};

0.01_06

	- Bouncer is now working (and throwing Bouncer::Exception)

		try
		{
			$user_bouncer->inspect( $user );

			println "\nAccepted.";
		}
		catch Bouncer::Exception with
		{
			my $e = shift;

			println $e->text;

		    println "ERROR: Expected that ".$_->text foreach @{ $e->object->object->list };
		};

0.01_07

	!!!!!!!!!!!!!!!! A COMPLETE REWRITE !!!!!!!!!!!!!!!!

                     .EVERYTHING CHANGED.

    - See test.pl for the api.
	
0.01_11

	added istyp() to the tie interface. Now you can retrieve the type of a tied variable with
	
		istyp( $ref_to_var )
		
	Example:
		
		if( istyp( $internet ) eq 'Type::email' ) 

0.01_14

	add REF type.

0.01_20

	added Data::Verify::Guard which inspects whole objects.
	added 't/guard.t' test.

0.01.23

  changed version scheme to x.x.x (read perldelta, 'version' perldoc).
  renamed MYSQL_* types to *, removed redundant MYSQL_ BLOB types (now there is equivalent TEXT only)
  changed type IPV4 to general IP('V4') (or 'MAC', using Regexp::Common:net)
  added Interfaces under IType for grouping the types. Now have ::Numeric, ::Temporal, ::String and ::Logic
  added toc() which is like catalog(), but showing it grouped by context

0.01.24

  added Tie::ListKeyedHash (0.41) to the Makefile.PL prerequisites
  cleaned some of the pod documentation
  added new type CREDITCARD (uses Business::CreditCard for LUHN mod10)
  supported types are: DINERS, BANKCARD, VISA, DISCOVER, JCB, MASTERCARD, BLACHE, AMEX